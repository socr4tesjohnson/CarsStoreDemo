// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Web.Migrations
{
    [DbContext(typeof(CarsContext))]
    [Migration("20200328212226_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Database.Entities.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarColorId")
                        .HasColumnType("int");

                    b.Property<int?>("CarMakeId")
                        .HasColumnType("int");

                    b.Property<int?>("CarTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarColorId");

                    b.HasIndex("CarMakeId");

                    b.HasIndex("CarTypeId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Database.Entities.CarColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarColors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "White"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Black"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Silver"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Red"
                        });
                });

            modelBuilder.Entity("Database.Entities.CarMake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarMakes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Ford"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Tesla"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Dodge"
                        },
                        new
                        {
                            Id = 4,
                            Description = "BMW"
                        });
                });

            modelBuilder.Entity("Database.Entities.CarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CarTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "SUV"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Sedan"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Truck"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Convertible"
                        });
                });

            modelBuilder.Entity("Database.Entities.Car", b =>
                {
                    b.HasOne("Database.Entities.CarColor", "Color")
                        .WithMany("Cars")
                        .HasForeignKey("CarColorId");

                    b.HasOne("Database.Entities.CarMake", "Make")
                        .WithMany("Cars")
                        .HasForeignKey("CarMakeId");

                    b.HasOne("Database.Entities.CarType", "Type")
                        .WithMany("Cars")
                        .HasForeignKey("CarTypeId");
                });
#pragma warning restore 612, 618
        }
    }
}
